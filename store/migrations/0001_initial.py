# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-22 18:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=140, verbose_name='Name')),
                ('type', models.CharField(choices=[('BIL', 'Billing'), ('SHI', 'Shipping')], default='BIL', max_length=3, verbose_name='Type')),
                ('default', models.BooleanField()),
                ('firstname', models.CharField(max_length=50, verbose_name='Firstname')),
                ('lastname', models.CharField(max_length=50, verbose_name='Lastname')),
                ('adress_line1', models.CharField(max_length=140, verbose_name='Address 1')),
                ('adress_line2', models.CharField(blank=True, max_length=140, verbose_name='Address 2')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('state_province', models.CharField(max_length=50, verbose_name='State/Providence')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('zipcode', models.CharField(max_length=32, verbose_name='ZIP code')),
                ('phone_number', models.CharField(max_length=40, verbose_name='Phone number')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date added')),
            ],
            options={
                'ordering': ['client', 'default', 'date', 'name'],
                'verbose_name_plural': 'adresses',
                'verbose_name': 'adress',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('name', models.CharField(default='', max_length=140, verbose_name='Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date added')),
                ('updated', models.DateField(auto_now=True, verbose_name='Date updated')),
            ],
            options={
                'ordering': ['order', 'date'],
                'verbose_name_plural': 'categories',
                'verbose_name': 'category',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
                'verbose_name_plural': 'clients',
                'verbose_name': 'client',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.SlugField(editable=False, unique=True, verbose_name='SKU')),
                ('items_subTotal', models.FloatField(default=0, verbose_name='Items subtotal')),
                ('shipping_cost', models.FloatField(default=0, verbose_name='Shipping cost')),
                ('taxes_cost', models.FloatField(default=0, verbose_name='Taxes costs')),
                ('total', models.FloatField(default=0, verbose_name='Total')),
                ('shipping_carrier', models.CharField(max_length=50, verbose_name='Shipping carrier')),
                ('shipping_tracking', models.CharField(max_length=50, verbose_name='Shipping tracking numer')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date placed')),
                ('updated', models.DateField(auto_now=True, verbose_name='Date updated')),
                ('status', models.CharField(choices=[('PRO', 'processing'), ('SHI', 'shipped'), ('COM', 'complete')], default='PRO', editable=False, max_length=3, verbose_name='status')),
                ('billingAdress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billingAdress', to='store.Adress')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Client')),
                ('shippingAdress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shippingAdress', to='store.Adress')),
            ],
            options={
                'ordering': ['date', 'sku'],
                'verbose_name_plural': 'orders',
                'verbose_name': 'order',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuantity', models.IntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Order')),
            ],
            options={
                'ordering': ['cuantity'],
                'verbose_name_plural': 'order products',
                'verbose_name': 'order product',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.SlugField(editable=False, unique=True, verbose_name='SKU')),
                ('name', models.CharField(default='', max_length=140, verbose_name='Name')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Main image')),
                ('price', models.FloatField(default=0.0, verbose_name='Price')),
                ('discount', models.FloatField(default=0.0, verbose_name='Discount')),
                ('inventory', models.IntegerField(default=0, verbose_name='Inventory')),
                ('status', models.CharField(choices=[('IN', 'In stock'), ('OUT', 'Out of stock')], default='OUT', max_length=3, verbose_name='Status')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date added')),
                ('updated', models.DateField(auto_now=True, verbose_name='Date updated')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['order', 'date', 'sku'],
                'verbose_name_plural': 'products',
                'verbose_name': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=140, verbose_name='Name')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date added')),
                ('updated', models.DateField(auto_now=True, verbose_name='Date updated')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product')),
            ],
            options={
                'ordering': ['order', 'date'],
                'verbose_name_plural': 'images',
                'verbose_name': 'image',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuantity', models.IntegerField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Client')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product')),
            ],
            options={
                'ordering': ['cuantity'],
                'verbose_name_plural': 'shopping cart products',
                'verbose_name': 'shopping cart product',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.CharField(max_length=50, verbose_name='Token')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Order')),
            ],
        ),
        migrations.AddField(
            model_name='orderproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product'),
        ),
        migrations.AddField(
            model_name='adress',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Client'),
        ),
    ]
